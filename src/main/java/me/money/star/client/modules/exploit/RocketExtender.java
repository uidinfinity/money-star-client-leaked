package me.money.star.client.modules.exploit;

import com.google.common.eventbus.Subscribe;
import me.money.star.MoneyStar;
import me.money.star.client.gui.modules.Module;
import me.money.star.event.impl.PacketEvent;
import me.money.star.event.impl.TickEvent;
import me.money.star.event.impl.entity.projectile.RemoveFireworkEvent;
import me.money.star.mixin.accessor.AccessorFireworkRocketEntity;
import me.money.star.util.math.timer.CacheTimer;
import me.money.star.util.math.timer.Timer;
import me.money.star.util.traits.Util;
import net.minecraft.entity.projectile.FireworkRocketEntity;
import net.minecraft.network.packet.c2s.common.CommonPongC2SPacket;
import net.minecraft.network.packet.s2c.play.EntitiesDestroyS2CPacket;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;

import java.util.ArrayList;
import java.util.List;

public class RocketExtender extends Module {
    private final List<CommonPongC2SPacket> packetList = new ArrayList<>();
    //
    private boolean extendFirework;
    private final Timer extendFireworkTimer = new CacheTimer();
    private FireworkRocketEntity firework;

    /**
     *
     */
    public RocketExtender() {
        super("RocketExtender", "Extends firework boost duration",
               Category.EXPLOIT,true,false,false);
    }

    @Override
    public void onDisable() {
        if (firework != null) {
            ((AccessorFireworkRocketEntity) firework).hookWasShotByEntity();
        }
        firework = null;
        extendFirework = false;
        for (CommonPongC2SPacket packet : packetList) {
            MoneyStar.networkManager.sendPacket(packet);
        }
        packetList.clear();
    }

    @Subscribe
    public void onRemoveFirework(RemoveFireworkEvent event) {
        if (Util.mc.player == null) {
            return;
        }
        if (Util.mc.player.isGliding() && firework != event.getRocketEntity()
                && ((AccessorFireworkRocketEntity) event.getRocketEntity()).hookWasShotByEntity()
                && ((AccessorFireworkRocketEntity) event.getRocketEntity()).getShooter() == Util.mc.player) {
            extendFirework = true;
            event.cancel();
            firework = event.getRocketEntity();
            extendFireworkTimer.reset();
        }
    }

    @Subscribe
    public void onTick(TickEvent event) {
        if (!extendFirework) {
            return;
        }
        if (!Util.mc.player.isGliding() || Util.mc.player.isOnGround() || extendFireworkTimer.passed(50000)) {
            extendFirework = false;
            if (firework != null) {
                ((AccessorFireworkRocketEntity) firework).hookWasShotByEntity();
                firework = null;
            }
            for (CommonPongC2SPacket packet : packetList) {
                MoneyStar.networkManager.sendPacket(packet);
            }
            packetList.clear();
        }
    }

    @Subscribe
    public void onPacketOutbound(PacketEvent.Outbound event) {
        if (Util.mc.player == null || Util.mc.world == null) {
            return;
        }
        if (event.getPacket() instanceof CommonPongC2SPacket packet
                && extendFirework && Util.mc.player.isGliding()) {
            event.cancel();
            packetList.add(packet);
        }
    }

    @Subscribe
    public void onPacketInbound(PacketEvent.Inbound event) {
        if (Util.mc.player == null || Util.mc.world == null || !Util.mc.player.isGliding() || !extendFirework) {
            return;
        }
        if (event.getPacket() instanceof EntitiesDestroyS2CPacket packet && firework != null) {
            for (int id : packet.getEntityIds()) {
                if (id == firework.getId()) {
                    event.cancel();
                    return;
                }
            }
        }
        if (event.getPacket() instanceof PlayerPositionLookS2CPacket packet) {
            extendFirework = false;
            if (firework != null) {
                ((AccessorFireworkRocketEntity) firework).hookWasShotByEntity();
                firework = null;
            }
            for (CommonPongC2SPacket p : packetList) {
                MoneyStar.networkManager.sendPacket(p);
            }
            packetList.clear();
        }
    }

    public boolean isExtendingFirework() {
        return extendFirework;
    }
}